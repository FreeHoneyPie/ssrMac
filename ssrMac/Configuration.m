// Generated by json_to_model

#import "Configuration.h"

@implementation Configuration  {
}

- (instancetype) initWithJSONDictionary:(NSDictionary *)dictionary {

    self = [super init];
    if (![dictionary isKindOfClass:[NSDictionary class]]) {
        return nil;
    }

    if (self) {
        self.current = (dictionary[@"current"] != [NSNull null]) ? [dictionary[@"current"] integerValue] : 0;
  
        self.profiles = [[NSMutableArray alloc] initWithCapacity:16];
        for (NSDictionary *iter in dictionary[@"profiles"]) {
            [self.profiles addObject:[[Profile alloc] initWithJSONDictionary:iter]];
        }
    }
    return self;
}

- (instancetype) initWithJSONData:(NSData *)data {
    self = [super init];
    if (self) {
        NSError *error = nil;
        id result = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];
        if (result) {
            self = [self initWithJSONDictionary:result];
        } else {
            return nil;
        }
    }
    return self;
}

- (NSDictionary *)JSONDictionary {

    NSMutableDictionary *dictionary = [[NSMutableDictionary alloc] init];
 
    dictionary[@"current"] = @(self.current);
  
    {
        NSMutableArray *profiles = [[NSMutableArray alloc] init];
        for (Profile *iter in self.profiles) {
            [profiles addObject:[iter JSONDictionary]];
        }
        dictionary[@"profiles"] = profiles;
    }
 
    return dictionary;
}

- (NSData *) JSONData {
    NSError *error = nil;
    NSData *data = [NSJSONSerialization dataWithJSONObject:[self JSONDictionary] options:0 error:&error];
    if (error) {
        @throw error;
    }
    return data;
}

@end
